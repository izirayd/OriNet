/* --------------------------------------------------------------
    Отладочные макросы для проверки индекса (версия 1.2c).

    http://www.imach.uran.ru/exarray

    Copyright 1998-2010, Р.Н.Шакиров, ИМаш УрО PAH.
    All Rights Reserved.

    Код предоставляется на условиях лицензии "public domain",
    т.е. допускается свободное применение, модификация и
    распространение кода при условии сохранения копирайта
    и добавления сведений о всех внесенных изменениях.

    ДАННОЕ ПРОГРАММНОЕ ОБЕСПЕЧЕНИЕ ПРЕДОСТАВЛЯЕТСЯ "КАК ЕСТЬ"
    БЕЗ КАКИХ-ЛИБО ГАРАНТИЙ, ЯВНЫХ ИЛИ ПОДРАЗУМЕВАЕМЫХ. ВЫ
    ИСПОЛЬЗУЕТЕ ЕГО НА СВОЙ СОБСТВЕННЫЙ СТРАХ И РИСК. АВТОР
    НЕ БУДЕТ НЕСТИ ОТВЕТСТВЕННОСТЬ ЗА УТРАТУ ДАННЫХ, УЩЕРБ,
    УБЫТКИ ИЛИ ЛЮБЫЕ ДРУГИЕ ВИДЫ ПОТЕРЬ ПРИ ЛЮБЫХ СПОСОБАХ
    ИСПОЛЬЗОВАНИЯ ДАННОГО ПРОГРАММНОГО ОБЕСПЕЧЕНИЯ.
-------------------------------------------------------------- */
#ifndef EXDEBUG_H
#define EXDEBUG_H

#ifndef EXARRAY_H
#include "Exarray.h"
#endif/*EXARRAY_H*/

/* --------------------------------------------------------------
    EXDEBUG(a)      - Выражение а выполняется только в отладочном
                      режиме при отсутствии макро NDEBUG.
-------------------------------------------------------------- */

#ifndef NDEBUG
#define EXDEBUG(a)  ((void)(a))
#else /*NDEBUG*/
#define EXDEBUG(a)  ((void)0)
#endif/*NDEBUG*/

/* --------------------------------------------------------------
    EXARR(T,m,n)    - Определение отладочного массива m из n
                      элементов типа T. Отладочный массив
                      аналогичен обычному массиву Т m [n] за
                      исключением того, что в отладочном режиме
                      для него проводится контроль индексов.

    EXPTR(T)        - Отладочный указатель на массив элементов
                      типа T. Отладочный указатель аналогичен
                      обычному указателю Т* за исключением того,
                      что в отладочном режиме для него проводится
                      контроль индексов.

    EXPTRTO(T,m,n)  - Формирование отладочного указателя на
                      массив m из n элементов типа T, заданный
                      обычным или отладочным массивом или
                      указателем. Если массив задан отладочным
                      массивом или указателем, то проводится
                      контроль диапазона.

    EXPTRTYPE(m)    - Преобразование динамического или
                      регулируемого массива, динамического
                      или ограниченного указателя в формат,
                      допускающий присваивание отладочному
                      указателю.

    EXPTRBASE(p)    - Преобразование отладочного массива или
                      указателя р к обычному массиву или
                      указателю без контроля индексов.

    EXPTRCHECK(p,n) - Преобразование отладочного массива или
                      указателя p к обычному массиву или
                      указателю с контролем возможности
                      индексации элементов 0..n-1.

    EXPTRINDEX(p,i) - Преобразование отладочного массива или
                      указателя p к обычному массиву или
                      указателю с контролем возможности
                      индексации элементов 0..i.

    EXPTRNEW(T,n)   - Динамическое распределение памяти с
                      обнулением (см. ALLOW_EXARRAY_NEW_DELETE),
                      вызовом конструкторов и выдачей
                      отладочного указателя.

    EXPTRDELETE(p)  - Вызовом деструкторов и освобождение
                      памяти, распределенной для отладочного
                      указателя р.

    EXPTRALLOC(T,n) - Динамическое распределение памяти с
                      обнулением и выдачей отладочного
                      указателя, без вызова конструкторов.

    EXPTRFREE(p)    - Освобождение памяти, распределенной
                      для отладочного указателя р.
                      Деструкторы не вызываются.

    EXPTRALIGNED_ALLOC(T,n,a)   - EXPTRALLOC с выравниванием.
    EXPTRALIGNED_FREE(T)        - EXPTRFREE с выравниванием.

    Контроль индексов для отладочных массивов и указателей
    проводится при отсутствии макро NCHECKPTR и NDEBUG, иначе
    отладочные массивы и указатели реализуются, как обычные.

    Пример:             Отладка (нет NCHECKPTR)         NCHECKPTR
    =================== ===========================     ===========
    EXARR(int,m,10);    int m___ [11];                  int m [11];
                        exptr<int> p=exptr<int>(m___,10)
    EXPTR(int) p;       exptr<int> p;                   int* p;
    p = EXPTRTO(m,10);  p = exptr<int>(m,10);           p = m;
    EXPTRTYPE(m);       m;                              m.base();
    EXPTRBASE(p);       p.base();                       p;
-------------------------------------------------------------- */

#ifdef  NCHECKPTR

#define EXARR(T,m,n)    T m[(n)+1]
#define EXPTR(T)        T*
#define EXPTRTO(T,m,n)  (m)
#define EXPTRTYPE(m)    ((m).base())
#define EXPTRBASE(p)    (p)
#define EXPTRCHECK(p,n) (p)
#define EXPTRINDEX(p,i) (p)
#define EXPTRNEW(T,n)   (EXNEW(T,(n)))
#define EXPTRDELETE(p)  (EXDELETE(p))
#define EXPTRALLOC(T,n) (EXALLOC(T,(n)))
#define EXPTRFREE(p)    (EXFREE(p))
#define EXPTRALIGNED_ALLOC(T,n,a)   (EXALIGNED_ALLOC(T,(n),(a)))
#define EXPTRALIGNED_FREE(p)        (EXALIGNED_FREE(p))

#else /*NCHECKPTR*/

#define EXARR(T,m,n)    T m##___ [(n)+1];\
                        exptr<T>m = exptr<T>(m##___,\
                                      sizeof(m##___)/sizeof(T)-1,0)
#define EXPTR(T)        exptr<T>
#define EXPTRTO(T,m,n)  (exptr<T>((m),(n)))
#define EXPTRTYPE(m)    (m)
#define EXPTRBASE(p)    ((p).base())
#define EXPTRCHECK(p,n) ((p).check(n))
#define EXPTRINDEX(p,i) ((p).index(i))
#define EXPTRNEW(T,n)   (exptr<T>().allocate(n))
#define EXPTRDELETE(p)  ((p).deallocate())
#define EXPTRALLOC(T,n) (exptr<T>().alloc(n))
#define EXPTRFREE(p)    ((p).free())
#define EXPTRALIGNED_ALLOC(T,n,a)   (exptr<T>().aligned_alloc(n,a))
#define EXPTRALIGNED_FREE(p)        ((p).aligned_free())

#endif/*NCHECKPTR*/

#endif/*EXDEBUG_H*/
